name: Deploy to Prod
concurrency: prod
on:
  workflow_dispatch:
permissions: write-all
jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - uses: chrnorm/deployment-action@releases/v1
        name: Create Deployment
        id: deployment
        with:
          token: ${{ secrets.HUB_TOKEN }}
          ref: ${{ github.sha }}
          initial_status: in_progress
          target_url: https://ai.lckdata.com
          environment: prod
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: yarn
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push Nginx
        id: nginx_build
        uses: docker/build-push-action@v2
        with:
          context: ./nginx
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/lckdata-ai:nginx-${{ github.sha }}
      - name: Build Web
        env:
          ENVIRONMENT: prod
        run: |
          yarn install --frozen-lockfile --ignore-scripts --prefer-offline
          yarn build
      - name: Build and push Web
        id: web_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/lckdata-ai:web-${{ github.sha }}
      - name: Image digest
        run: |
          echo nginx image: ${{ steps.nginx_build.outputs.digest }}
          echo web image: ${{ steps.web_build.outputs.digest }}
      - uses: marocchino/setup-ecs-cli@v1
        with:
          version: v1.21.0
      - name: Deploy to Prod
        timeout-minutes: 30
        env:
          NGINX_IMAGE: ${{ steps.login-ecr.outputs.registry }}/lckdata-ai:nginx-${{ github.sha }}
          NODE_IMAGE: ${{ steps.login-ecr.outputs.registry }}/lckdata-ai:web-${{ github.sha }}
          ENVIRONMENT: prod
          AWS_REGION: ap-northeast-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        working-directory: deploy
        run: |
          ecs-cli compose \
            --cluster lckdata \
            --project-name lckdata-ai \
            --file docker-compose.ecs.yml \
            service up \
            --force-deployment \
            --timeout 30
      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ secrets.HUB_TOKEN }}
          target_url: https://ai.lckdata.com
          state: success
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
      - name: Update deployment status (failure)
        if: failure() || cancelled()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ secrets.HUB_TOKEN }}
          target_url: https://ai.lckdata.com
          state: failure
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
